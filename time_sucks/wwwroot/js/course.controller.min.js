angular.module("time").controller("CourseCtrl",["$scope","$http","$routeParams","$location","usSpinnerService",function(n,t,i,r,u){n.loaded=!1;n.config={};n.config.showInactiveProjects=!1;n.load=function(){n.courseID=i.ID;n.courseID||r.path("/courses");u.spin("spinner");t.post("/Home/GetCourse",{courseID:n.courseID}).then(function(t){u.stop("spinner");n.course=t.data;n.course.users||(n.course.users=null);n.course.projects||(n.course.projects=null)},function(){u.stop("spinner");toastr.error("Failed retrieving course.")});n.createProject=function(){toastr.info("Attempted to create project - enable REST endpoint.")};n.saveCourse=function(){t.post("/Home/SaveCourse",n.course).then(function(){toastr.success("Saved course.")},function(){toastr.error("Failed saving course.")})};n.joinCourse=function(){toastr.info("Attempted to join course - enable REST endpoint.")};n.leaveCourse=function(){confirm("Are you sure you want to leave this course? If you would like to rejoin the course later, you must contact the instructor to be added back into it.")&&(n.course.users[n.$parent.user.userID].isActive=!1,toastr.info("Attempted to leave course - enable REST endpoint."))};n.deleteUserFromCourse=function(i){confirm("Are you sure you want to delete this user from the course?")&&t.post("/Home/DeleteUserCourse",{userID:i,courseID:n.courseID}).then(function(){delete n.course.users[i]},function(n){n.status===500?toastr.error("Failed to delete user from course, query error."):n.status===401?toastr.error("Unauthorized to delete this user from the course."):toastr.error("Failed to delete user from course, unknown error.")})};n.userInCourse=function(){var t=!1;return n.course?($.each(n.course.users,function(i,r){r.userID===n.$parent.user.userID&&(t=!0)}),t):!1};n.userActiveInCourse=function(){var t=!1;return n.course?($.each(n.course.users,function(i,r){r.userID===n.$parent.user.userID&&r.isActive&&(t=!0)}),t):!1};n.hasProjects=function(){return n.course?!angular.equals([],n.course.projects):!1};n.hasUsers=function(){return n.course?!angular.equals([],n.course.users):!1};n.loaded=!0};n.$parent.user&&n.$parent.user!==""?n.load():t.get("/Home/CheckSession").then(function(t){n.$parent.user=t.data;n.$parent.loaded=!0;n.load()},function(){toastr.error("Not logged in.");r.path("/login")})}]);